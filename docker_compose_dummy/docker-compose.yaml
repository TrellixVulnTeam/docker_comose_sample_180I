version: '2.2'

services:
  Nexus:
     image: nexus
     build: ./Nexus
     depends_on:
        - MongoDB
        - RabbitMQ
     command: python upstream_listener.py
     volumes:
        - "logs:/Nexus/logs"
     environment:
       receiver_queue: upstream
       downstream_sender: downstream1
       downstream_listener: downstream2
       gcd_sender: gcd1
       gcd_listener: gcd2
       src_system: Nexus
       mq_host: mq
       tracer_ip: tracer
       sleep_time: 60

  External:
     image: external
     build: ./External
     depends_on:
        - MongoDB
        - RabbitMQ
     command: python listener.py
     volumes:
        - "logs:/External/logs"
     environment:
       receiver_queue: downstream1
       sender_queue: downstream2
       src_system: DOWN
       mq_host: mq
       tracer_ip: tracer
       sleep_time: 60

  GCD:
     image: gcd
     build: ./GCD
     depends_on:
        - MongoDB
        - RabbitMQ
     command: python listener.py
     volumes:
        - "logs:/GCD/logs"
     environment:
       receiver_queue: gcd_sender
       sender_queue: gcd_listener
       src_system: GCD
       mq_host: mq
       tracer_ip: tracer
       sleep_time: 60

  Tracer:
     container_name: tracer
     image: tracer
     build: ./Tracer
     depends_on:
        - MongoDB
        - RabbitMQ
     command: python run.py
     volumes:
       - "logs:/GCD/logs"
     ports:
       - "5000:5000"
     expose:
        - "5000"
     environment:
       mongo_addr: db
       mq_host : mq
       sender_queue: upstream


  LA:
     image: la
     build: ./LogAggregator
     depends_on:
        - MongoDB
        - RabbitMQ
     command: python log_aggregator.py
     volumes:
        - "logs:/LA/logs"
     environment:
       mongo_addr: db
    
  MongoDB:
     container_name: db
     image: mongo:4.0.4
     ports:
       - "27017:27017"
  
  RabbitMQ:
     image: rabbitmq:3.7-management
     container_name: mq
     ports:
       - "15672:15672"
       - "5672:5672"
     volumes:
       - /etc/so/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
       - /etc/so/definitions.json:/etc/rabbitmq/definitions.json:ro
       
volumes:
  logs: